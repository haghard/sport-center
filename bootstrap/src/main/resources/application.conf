akka {

  logConfigOnStart = on

  logger-startup-timeout = 10000

  loglevel = DEBUG
  stdout-loglevel = INFO
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = off

  actor {
    provider = akka.cluster.ClusterActorRefProvider
  }

  scheduler-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "fork-join-executor"
    # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 10
    }
    throughput = 100
  }

  http-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 4
      parallelism-factor = 2.0
      parallelism-max = 20
    }
    throughput = 100
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://SCenter@127.0.0.1:2551",
      "akka.tcp://SCenter@127.0.0.1:2552"]

    auto-down-unreachable-after = 10s
  }

  extensions = ["akka.contrib.datareplication.DataReplication"]

  contrib.cluster.sharding {
    role = "Domain"
    #Timeout of the shard rebalancing process.
    handoff-timeout = 60 s

    # How often the coordinator saves persistent snapshots, which are
    # used to reduce recovery times
    snapshot-interval = 60 s

    # Rebalance check is performed periodically with this interval
    rebalance-interval = 20 s
  }

  persistence {
    journal.plugin = "casbah-journal"
    snapshot-store.plugin = "casbah-snapshot-store"
    view.auto-update-interval = 5s
  }
}

scheduler-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 2.0
    parallelism-max = 4
  }
  throughput = 100
}

stream-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 2.0
    parallelism-max = 4
  }
  throughput = 100
}

hystrix-stream-dispatcher {
  type = Dispatcher
  executor = fork-join-executor
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 2.0
    parallelism-max = 4
  }
  throughput = 100
}

crawler-dispatcher {
  type = PinnedDispatcher
  executor = thread-pool-executor
}

discovery {
  http-port = [8000, 8100]
  ops-timeout = 2 s
}